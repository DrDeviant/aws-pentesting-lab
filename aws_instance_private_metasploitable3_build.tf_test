

//Vulnerable Instance: Tobedefined
resource "aws_instance" "metasploitable3_build" {
  count         = var.deploment-control["metasploitable3_build"]    // control variable from variables.tf

  ami           = "ami-274ecc50"   # ubuntu 14.04
  instance_type = "t2.small"
  #key_name      = "key12345"
  #       "ssh_username": "ubuntu",
  private_ip    = "10.0.1.4"
  subnet_id                   = aws_subnet.privateSubnet.id
  vpc_security_group_ids = [aws_security_group.SecurityGroup-VulnerableMachines.id]
  tags = {
    Name = "metasploitable3"
  }


  provisioner "chef" {
    attributes_json = <<EOF
      {
        "key": "value",
        "app": {
          "cluster1": {
            "nodes": [
              "webserver1",
              "webserver2"
            ]
          }
        }
      }
    EOF

    environment     = "_default"
    client_options  = ["chef_license 'accept'"]
    run_list        = ["cookbook::recipe"]
    node_name       = "webserver1"
    secret_key      = "${file("../encrypted_data_bag_secret")}"
    server_url      = "https://chef.company.com/organizations/org1"
    recreate_client = true
    user_name       = "ubuntu"
    user_key        = "${file("../bork.pem")}"
    version         = "15.10.13"
    # If you have a self signed cert on your chef server change this to :verify_none
    ssl_verify_mode = ":verify_peer"
  }


  provisioner "remote-exec" {
    inline = [
      "wget -O /tmp/chef.rpm https://MYSERVER/chef_installers/chef-15.8.23-1.el7.x86_64.rpm",
      "rpm -Uvh /tmp/chef.rpm",
      "wget -O /tmp/base.tgz https://MYSERVER/policyfiles/base.tgz",
      "tar -C /tmp -xzf /tmp/base.tgz",
      "PWD=/tmp/base chef-client -z",
    ]
  }




  depends_on = [
    aws_vpc.VPC,
    aws_subnet.privateSubnet,
    aws_route_table.PublicRouteTable,
    aws_security_group.SecurityGroup-VulnerableMachines
  ]

}

